================================================================================
  Canvas 兼容性修复 - 验收清单
================================================================================

重启序列
--------
步骤 1: 保存文件
  [✓] src/utils/canvas_compat.py (灵活签名 shim)
  [✓] requirements.txt (版本锁定)
  [✓] app_new.py (shim 集成)
  [✓] test_canvas_compat.py (测试更新)
  [✓] 所有文档文件

步骤 2: 重启 Streamlit
  命令: .\run.ps1
  或: .\.venv\Scripts\streamlit.exe run app_new.py

步骤 3: 验收测试（见下方）

================================================================================
验收标准
================================================================================

1. 无崩溃验证
-------------
[ ] 应用启动成功
[ ] 无 AttributeError: module 'streamlit.elements.image' has no attribute 'image_to_url'
[ ] 无 TypeError: image_to_url() takes from 2 to 5 positional arguments but 6 were given
[ ] st_canvas 组件正常加载
[ ] 控制台无错误日志

2. 裁剪 UI 渲染验证
-------------------
[ ] 点击 "上传图片" 按钮
[ ] 选择测试图片（建议从 data/ 目录）
[ ] 背景图像正确显示在画布上
[ ] 图像清晰，比例正确
[ ] 蓝色裁剪框可见
[ ] 裁剪框可以拖动
[ ] 裁剪框可以调整大小（拖动角落）
[ ] 调整 "裁剪大小" 滑块，方框实时更新
[ ] 右侧预览实时更新
[ ] 调整 "预览缩放" 滑块，预览大小变化
[ ] 无 base64 编码错误
[ ] 无图像损坏或模糊

3. Shim 非干扰验证
------------------
[ ] 当前版本（Streamlit 1.32.2）正常工作
[ ] Shim 静默安装（无额外日志）
[ ] 启动时间正常（< 5 秒）
[ ] 无性能退化

逻辑验证（代码层面）:
  [✓] hasattr(st_image, "image_to_url") 检查存在
  [✓] 如果函数已存在，shim 立即返回（no-op）
  [✓] 如果函数不存在，shim 注入灵活签名函数
  [✓] 未来 Streamlit 重新引入 image_to_url 时不干扰

================================================================================
额外功能测试（可选）
================================================================================

识别功能
--------
[ ] 点击 "识别该区域" 按钮
[ ] 显示识别进度
[ ] 显示 Top-5 材质和置信度
[ ] 展开 "解释 / Reasoning" 查看推理
[ ] 展开 "证据 / Evidence" 查看链接
[ ] 证据 URL 可点击

错误处理
--------
[ ] 未上传图片点识别 → 友好提示
[ ] 网络错误 → 错误提示
[ ] API 错误 → 错误提示

================================================================================
性能指标
================================================================================

启动性能
--------
Shim 安装时间: _____ ms (目标: < 10ms)
应用启动时间: _____ s  (目标: < 5s)
首次渲染时间: _____ s  (目标: < 2s)

运行时性能
----------
裁剪框拖动: [ ] 流畅 [ ] 一般 [ ] 卡顿
预览更新: [ ] 实时 [ ] 延迟 [ ] 卡顿
内存占用: _____ MB (目标: < 500MB)

================================================================================
验收结论
================================================================================

[ ] ✅ 通过 - 所有测试通过，修复成功
[ ] ⚠️ 有条件通过 - 部分问题，可接受
[ ] ❌ 不通过 - 存在严重问题，需要修复

问题记录（如有）:
_________________________________________________________________
_________________________________________________________________
_________________________________________________________________

================================================================================
快速诊断命令
================================================================================

如果出现问题，运行以下命令诊断：

1. 测试 shim 功能
   .\.venv\Scripts\python.exe test_canvas_compat.py

2. 检查版本
   .\.venv\Scripts\python.exe -m pip show streamlit streamlit-drawable-canvas

3. 验证 image_to_url 可用性
   .\.venv\Scripts\python.exe -c "from src.utils.canvas_compat import install_image_to_url_shim; install_image_to_url_shim(); from streamlit.elements import image as st_image; print('Has image_to_url:', hasattr(st_image, 'image_to_url'))"

4. 完整诊断
   .\.venv\Scripts\python.exe dev\diagnose.py

================================================================================
文档参考
================================================================================

- 快速参考: QUICK_FIX_REFERENCE.md
- 签名修复: SIGNATURE_FIX.md
- 详细测试: RESTART_ACCEPTANCE.md
- 执行报告: EXECUTION_COMPLETE.md
- 用户指南: START_HERE.md

================================================================================
准备就绪 ✅ - 请启动应用并完成验收测试
================================================================================


