================================================================
   ✅ app_new.py 集成完成
================================================================

【集成内容】

  1. 调用 API ✅
     res = analyze_image(
         patch_path,
         engine=engine,
         lang=lang,
         enable_web=enable_web,
         web_k=web_k,
         web_lang=web_lang
     )

  2. 显示引擎 ✅
     st.caption(f"Engine: {engine}")

  3. 显示 Top-5 材质 + 置信度条 ✅
     for i, name in enumerate(res["materials"][:5]):
         score = res["confidence"][i]
         st.write(f"**{i+1}. {name}**")
         st.progress(score)

  4. 显示推理文本 ✅
     with st.expander("解释 / Reasoning", expanded=False):
         st.write(res["description"])

  5. 显示证据链接 ✅
     with st.expander("证据 / Evidence", expanded=False):
         for ev in evidence:
             label = ev.get("label")
             urls = ev.get("urls")
             st.write(f"**{label}:**")
             for url in urls:
                 st.markdown(f"  - [{url}]({url})")

【UI 布局】

  识别按钮点击后显示:
  
  Engine: cloud_qwen
  
  **1. 小羊皮**
  ████████████░░░░░░░░ 55%
  
  **2. PU皮革**
  ████░░░░░░░░░░░░░░░░ 20%
  
  **3. 牛皮**
  ███░░░░░░░░░░░░░░░░░ 12%
  
  **4. 涤纶**
  ██░░░░░░░░░░░░░░░░░░ 8%
  
  **5. 尼龙**
  █░░░░░░░░░░░░░░░░░░░ 5%
  
  ▶ 解释 / Reasoning
    基于视觉特征和联网证据，小羊皮的可能性最高，
    因为表面纹理细腻且有自然光泽。PU皮革和牛皮
    也有一定可能性，但光泽度和质感略有差异。
  
  ▶ 证据 / Evidence
    **小羊皮:**
      - https://baike.baidu.com/item/小羊皮
      - https://www.zhihu.com/question/...
    
    **PU皮革:**
      - https://baike.baidu.com/item/PU

【代码位置】

  app_new.py (Line 125-165):
  
  • Line 125-133: API 调用
    - 传递所有参数
    - 显示加载提示
  
  • Line 136: 引擎显示
    - st.caption(f"Engine: {engine}")
  
  • Line 138-149: Top-5 材质
    - 循环显示前5个
    - 置信度进度条
    - 空结果提示
  
  • Line 151-154: 推理文本
    - 可折叠 expander
    - 默认收起
  
  • Line 156-165: 证据链接
    - 可折叠 expander
    - 按面料分组
    - 点击可访问

【参数传递】

  从侧边栏到 API:
  
  • engine: st.selectbox("云端模型")
  • lang: st.radio("语言")
  • enable_web: st.checkbox("启用联网检索")
  • web_k: st.slider("每个候选检索条数")
  • web_lang: st.radio("检索语言")

【数据流】

  用户输入
    ├─ engine (引擎选择)
    ├─ lang (语言)
    ├─ enable_web (联网开关)
    ├─ web_k (检索条数)
    └─ web_lang (检索语言)
    ↓
  analyze_image(...)
    ↓
  返回结果
    ├─ materials: ["小羊皮", "PU皮革", ...]
    ├─ confidence: [0.55, 0.20, ...]
    ├─ description: "推理文本"
    ├─ engine: "cloud_qwen"
    └─ evidence: [{"label":"小羊皮", "urls":[...]}, ...]
    ↓
  UI 渲染
    ├─ Caption: Engine
    ├─ Top-5 + Progress bars
    ├─ Expander: 解释 / Reasoning
    └─ Expander: 证据 / Evidence

【错误处理】

  • NoAPIKeyError → st.error("未检测到 DASHSCOPE_API_KEY...")
  • Exception → st.error(f"云端分析失败：{e}")
  • 空 materials → st.info("未从描述中抽取到明确的面料名称...")

【交互流程】

  1. 用户上传图片
  2. 调整侧边栏参数
     • 选框大小
     • 预览放大倍数
     • 语言
     • 引擎
     • 联网开关
     • 检索条数
  3. 拖动裁剪框
  4. 查看实时预览
  5. 点击"识别该区域"
  6. 显示加载提示
     • "识别中…" (enable_web=False)
     • "识别中… + 联网验证…" (enable_web=True)
  7. 渲染结果
     • Engine caption
     • Top-5 材质 + 置信度
     • 推理文本 (expander)
     • 证据链接 (expander, 如果有)

【响应式设计】

  • col_img (2/3 宽度): 裁剪界面
  • col_info (1/3 宽度): 预览 + 识别按钮 + 结果

【验收清单】

  [✓] API 调用参数完整
  [✓] Engine caption 显示
  [✓] Top-5 材质显示
  [✓] 置信度进度条
  [✓] 推理文本 expander
  [✓] 证据链接 expander
  [✓] 按面料分组显示证据
  [✓] 可点击的 URL 链接
  [✓] 错误处理
  [✓] 空结果提示
  [✓] 加载提示

【UI 细节】

  • 材质名称: 加粗显示 (**{i+1}. {name}**)
  • 置信度: 进度条 (st.progress)
  • Expander: 默认收起 (expanded=False)
  • URL: Markdown 链接格式 ([url](url))
  • 分组: 每个面料独立显示证据
  • 缩进: 证据 URL 使用 "  - " 缩进

【示例输出】

  当 enable_web=True 时:
  
    Engine: cloud_qwen
    
    1. 小羊皮        ████████████ 55%
    2. PU皮革        ████ 20%
    3. 牛皮          ███ 12%
    4. 涤纶          ██ 8%
    5. 尼龙          █ 5%
    
    ▶ 解释 / Reasoning
      [推理文本]
    
    ▶ 证据 / Evidence
      小羊皮:
        - [URL 1]
        - [URL 2]
      PU皮革:
        - [URL 3]

  当 enable_web=False 时:
  
    Engine: cloud_qwen
    
    1. 小羊皮        ████████████ 55%
    2. PU皮革        ████ 20%
    3. 牛皮          ███ 12%
    4. 涤纶          ██ 8%
    5. 尼龙          █ 5%
    
    ▶ 解释 / Reasoning
      [推理文本]
    
    (无证据 expander)

【性能优化】

  • st.spinner: 显示加载状态
  • 条件渲染: 仅在有数据时显示
  • 限制数量: Top-5, 每个证据最多3个URL

【可访问性】

  • 清晰的标签 (解释 / Reasoning, 证据 / Evidence)
  • 可点击的链接
  • 进度条视觉反馈
  • 错误提示用户友好

================================================================
   🎉 app_new.py 集成完成！
================================================================

更新时间: 2025-10-24
版本: 9.0 (Open-Set + RAG + Integration)
状态: ✅ 已实现并验证

