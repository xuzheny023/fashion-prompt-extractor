# -*- coding: utf-8 -*-
"""
UI i18n for Cloud-Only Minimal Version
极简云端版 UI 文案
"""

TRANSLATIONS = {
    "zh": {
        # App
        "app.title": "AI 面料识别与分析",
        "app.subtitle": "基于云端 Qwen-VL 的智能面料分析工具",
        
        # Sidebar
        "sidebar.title": "👔 面料分析器",
        "sidebar.subtitle": "AI-Powered Fabric Recognition",
        "sidebar.upload": "📤 上传图片",
        "sidebar.upload_help": "支持 JPG、PNG 格式",
        "sidebar.settings": "⚙️ 参数设置",
        "sidebar.language": "🌐 语言 / Language",
        "sidebar.crop_size": "📐 选框大小 (px)",
        "sidebar.zoom": "🔍 预览放大倍数",
        "sidebar.top_k": "📊 返回结果数",
        "sidebar.about": "📖 关于",
        
        # Main Panel
        "main.upload_prompt": "👈 请上传图片开始分析",
        "main.adjust_crop": "👈 拖动调整裁剪框",
        "main.preview_title": "预览区域",
        "main.crop_info": "裁剪: {w}×{h} px",
        "main.preview_info": "预览: {size}×{size} px (×{zoom})",
        "main.recognize_button": "🚀 识别该区域",
        "main.recognizing": "☁️ 调用云端识别中...",
        "main.success": "✅ 识别完成！",
        
        # Results
        "result.engine": "Engine: {engine}",
        "result.no_materials": "未识别到材料",
        "result.reasoning_title": "💡 解释 / Reasoning",
        "result.reasoning_subtitle": "由云端大模型生成",
        
        # Errors
        "error.no_api_key": "未配置 DASHSCOPE_API_KEY，请在 Secrets 中添加后重试。",
        "error.config_steps": """
**配置步骤：**
1. 创建 `.streamlit/secrets.toml`
2. 添加：`DASHSCOPE_API_KEY = "sk-your-key-here"`
3. 重启应用
""",
        "error.recognition_failed": "❌ 识别失败: {error}",
        "error.timeout": "⏱️ **网络超时** - 请检查网络连接或稍后重试",
        "error.network": "🌐 **网络连接问题** - 请检查网络设置",
        "error.quota": "📊 **API 配额不足** - 请稍后再试或检查账户余额",
        "error.invalid_key": "🔑 **API Key 无效** - 请检查 Secrets 配置",
        "error.not_found": "🔍 **资源未找到** - 请联系技术支持",
        "error.suggestion": "💡 **建议**：检查网络连接、API Key 配置或稍后重试",
        "error.image_load": "❌ 图片加载失败: {error}",
        
        # Footer
        "footer.powered_by": "⚡ Powered by Qwen-VL",
        "footer.interactive": "🖼️ Interactive Crop",
        "footer.cached": "🚀 Cached for Speed",
    },
    
    "en": {
        # App
        "app.title": "AI Fabric Recognition & Analysis",
        "app.subtitle": "Intelligent Fabric Analysis Tool Powered by Cloud Qwen-VL",
        
        # Sidebar
        "sidebar.title": "👔 Fabric Analyst",
        "sidebar.subtitle": "AI-Powered Fabric Recognition",
        "sidebar.upload": "📤 Upload Image",
        "sidebar.upload_help": "Supports JPG, PNG formats",
        "sidebar.settings": "⚙️ Settings",
        "sidebar.language": "🌐 Language",
        "sidebar.crop_size": "📐 Crop Size (px)",
        "sidebar.zoom": "🔍 Preview Zoom",
        "sidebar.top_k": "📊 Top K Results",
        "sidebar.about": "📖 About",
        
        # Main Panel
        "main.upload_prompt": "👈 Please upload an image to start analysis",
        "main.adjust_crop": "👈 Drag to adjust crop box",
        "main.preview_title": "Preview Area",
        "main.crop_info": "Crop: {w}×{h} px",
        "main.preview_info": "Preview: {size}×{size} px (×{zoom})",
        "main.recognize_button": "🚀 Recognize This Area",
        "main.recognizing": "☁️ Calling cloud recognition...",
        "main.success": "✅ Recognition complete!",
        
        # Results
        "result.engine": "Engine: {engine}",
        "result.no_materials": "No materials identified",
        "result.reasoning_title": "💡 Reasoning",
        "result.reasoning_subtitle": "Generated by cloud LLM",
        
        # Errors
        "error.no_api_key": "DASHSCOPE_API_KEY not configured. Please add it in Secrets and retry.",
        "error.config_steps": """
**Configuration Steps:**
1. Create `.streamlit/secrets.toml`
2. Add: `DASHSCOPE_API_KEY = "sk-your-key-here"`
3. Restart the app
""",
        "error.recognition_failed": "❌ Recognition failed: {error}",
        "error.timeout": "⏱️ **Network Timeout** - Please check your connection or retry later",
        "error.network": "🌐 **Network Connection Issue** - Please check network settings",
        "error.quota": "📊 **API Quota Exceeded** - Please retry later or check account balance",
        "error.invalid_key": "🔑 **Invalid API Key** - Please check Secrets configuration",
        "error.not_found": "🔍 **Resource Not Found** - Please contact support",
        "error.suggestion": "💡 **Suggestion**: Check network connection, API Key configuration, or retry later",
        "error.image_load": "❌ Image load failed: {error}",
        
        # Footer
        "footer.powered_by": "⚡ Powered by Qwen-VL",
        "footer.interactive": "🖼️ Interactive Crop",
        "footer.cached": "🚀 Cached for Speed",
    }
}


def t(key: str, lang: str = "zh", **kwargs) -> str:
    """
    Get translated text
    
    Args:
        key: Translation key (e.g., "app.title")
        lang: Language code ("zh" or "en")
        **kwargs: Format parameters
    
    Returns:
        Translated and formatted text
    """
    lang = lang.lower()
    if lang not in TRANSLATIONS:
        lang = "zh"
    
    text = TRANSLATIONS[lang].get(key, key)
    
    if kwargs:
        try:
            return text.format(**kwargs)
        except (KeyError, ValueError):
            return text
    
    return text


__all__ = ["TRANSLATIONS", "t"]
